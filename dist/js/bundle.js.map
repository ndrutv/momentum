{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,iEAAe,QAAQ;;;;;;;;;;;;;;;ACpCW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqiEAAe,MAAM;;;;;;;;;;;;;;;AClHe;AACF;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+CAAO;AAC3B;AACA,4BAA4B,iDAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;;AC9Be;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,MAAM;AAClC;AACA,2BAA2B,IAAI,GAAG,QAAQ,GAAG,MAAM;AACnD,KAAK;AACL;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,MAAM;AACvD,SAAS;AACT;AACA;AACA,mCAAmC,iDAAS,OAAO;AACnD,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACzErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;ACvBnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,IAAI,KAAK,KAAK,QAAQ,KAAK,SAAS,OAAO,SAAS,MAAM;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,KAAK;AAClD,6CAA6C,YAAY;AACzD;AACA,iDAAiD,WAAW;AAC5D,mDAAmD,SAAS;AAC5D,UAAU;AACV,qEAAqE,gBAAgB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,OAAO;;;;;;UCzFtB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNkC;AACQ;AACJ;AACA;AACE;AACF;AACtC;AACA;AACA,IAAI,yDAAI;AACR,IAAI,6DAAQ;AACZ,IAAI,2DAAM;AACV,IAAI,2DAAM;AACV,IAAI,4DAAO;AACX,IAAI,2DAAM;AACV,CAAC,E","sources":["webpack:///./js/modules/greeting.js","webpack:///./js/modules/player.js","webpack:///./js/modules/quotes.js","webpack:///./js/modules/slider.js","webpack:///./js/modules/time.js","webpack:///./js/modules/utils.js","webpack:///./js/modules/weather.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./js/index.js"],"sourcesContent":["const greeting = () => {\r\n    const greeting = document.querySelector('.greeting');\r\n    const name = document.querySelector('.name');\r\n    \r\n    const setName = () => {\r\n        if (!localStorage.getItem('name')) {\r\n            name.setAttribute('placeholder', '[Enter name]');\r\n        } else {\r\n            name.value = localStorage.getItem('name');\r\n        }\r\n    };\r\n\r\n    setName();\r\n\r\n    name.addEventListener('input', () => {\r\n        const value = name.value;\r\n        \r\n        localStorage.setItem('name', value);\r\n        setName();\r\n    });\r\n\r\n    // \r\n    const date = new Date();\r\n    const hours = date.getHours();\r\n    \r\n    if ( hours >= 0 && hours < 6 ) {\r\n        greeting.textContent = 'Good night';\r\n    } else if ( hours >= 6 && hours < 12 ) {\r\n        greeting.textContent = 'Good morning';\r\n    } else if ( hours >= 12 && hours < 18 ) {\r\n        greeting.textContent = 'Good afternoon'; \r\n    } else {\r\n        greeting.textContent = 'Good evening'; \r\n    }\r\n};\r\n\r\nexport default greeting;","import { getData } from \"./utils\";\r\n\r\nconst player = () => {\r\n    // задаем переменные\r\n    const controlsPlay = document.querySelector('.play');\r\n    const controlsPrev = document.querySelector('.play-prev');\r\n    const controlsNext = document.querySelector('.play-next');\r\n    const ulList = document.querySelector('.play-list');\r\n\r\n\r\n    // получаем данные\r\n    let list = null;\r\n\r\n    const getList = async () => {\r\n        list = await getData('./playlist.json');\r\n    };\r\n\r\n\r\n    // выводим плейлист\r\n    let trackList = null;\r\n    \r\n    const setList = async () => {\r\n        await getList();\r\n\r\n        list.favorite.forEach((e) => {\r\n            const li = document.createElement('li');\r\n            li.classList.add('play-item');\r\n            li.textContent = e.title;\r\n            ulList.append(li);\r\n        });\r\n\r\n        trackList = document.querySelectorAll('.play-item');\r\n    };\r\n\r\n    setList();\r\n\r\n\r\n    // создаем плеер\r\n    const audio = new Audio();\r\n\r\n\r\n    // переключаем play/pause\r\n    const switchPlay = () => {\r\n        if (!controlsPlay.classList.contains('pause')) {\r\n            controlsPlay.classList.add('pause');\r\n        }\r\n    };\r\n\r\n\r\n    // запускаем трек\r\n    const playAudio = () => {\r\n        audio.src = list.favorite[currentTrack].src;\r\n        audio.play();\r\n\r\n        switchPlay();\r\n        markActive();\r\n    };\r\n\r\n\r\n    // останавливаем трек\r\n    const stopAudio = () => {\r\n        audio.pause();\r\n\r\n        trackList[currentTrack].classList.remove('item-active');\r\n    };\r\n\r\n\r\n    // отмечаем активный трек\r\n    let currentTrack = 0;\r\n\r\n    const markActive = () => {\r\n        trackList.forEach((e) => {\r\n            e.classList.remove('item-active');\r\n        });\r\n\r\n        trackList[currentTrack].classList.add('item-active');\r\n    };\r\n\r\n\r\n    // отслеживаем нажатие play/pause\r\n    controlsPlay.addEventListener('click', () => {\r\n        controlsPlay.classList.toggle('pause');\r\n        \r\n        if (controlsPlay.classList.contains('pause')) {\r\n            playAudio();\r\n        } else {\r\n            stopAudio();\r\n        }\r\n    });\r\n\r\n    // отслеживаем нажатие Prev\r\n    controlsPrev.addEventListener('click', () => {\r\n        currentTrack--;\r\n\r\n        if (currentTrack < 0) {\r\n            currentTrack = list.favorite.length - 1;\r\n        }\r\n\r\n        playAudio();\r\n    });\r\n\r\n\r\n    // отслеживаем нажатие Next\r\n    controlsNext.addEventListener('click', () => {\r\n        currentTrack++;\r\n\r\n        if (currentTrack > list.favorite.length - 1) {\r\n            currentTrack = 0;\r\n        }\r\n\r\n        playAudio();\r\n    });\r\n};\r\n\r\nexport default player;","import { getRandom } from \"./utils\";\r\nimport { getData } from \"./utils\";\r\n\r\nconst quotes = () => {\r\n    // задаем переменные\r\n    const btnChangeQuote = document.querySelector('.change-quote');\r\n    const divQuote = document.querySelector('.quote');\r\n    const divAuthor = document.querySelector('.author');\r\n\r\n    // устанавливаем данные\r\n    let res = null;\r\n\r\n    const setQuote = async () => {\r\n        res = await getData('./quotes.json');\r\n\r\n        const randomQuote = getRandom(res.quotes.length);\r\n        const quote = res.quotes[randomQuote].text;\r\n        const author = res.quotes[randomQuote].author;\r\n\r\n        divQuote.textContent = quote;\r\n        divAuthor.textContent = author;\r\n    };\r\n\r\n    setQuote();\r\n\r\n    btnChangeQuote.addEventListener('click', () => {\r\n        setQuote();\r\n    });\r\n};\r\n\r\nexport default quotes;","import { getRandom } from \"./utils\";\r\n\r\nconst slider = () => {\r\n    // задаем переменные\r\n    const body = document.querySelector('.body');\r\n    const prevSlide = document.querySelector('.slide-prev');\r\n    const nextSlide = document.querySelector('.slide-next');\r\n\r\n    // создаем массив ссылок\r\n    const date = new Date();\r\n    const hours = date.getHours();\r\n    const slideArray = new Array(20).fill('');\r\n\r\n    const res = (dayTime) => slideArray.map((_, i) => {\r\n        let url = 'https://raw.githubusercontent.com/ndrutv/momentum-images/assets/images';\r\n        let count;\r\n\r\n        count = i < 9 ? `0${i + 1}` : count = i + 1;\r\n        \r\n        slideArray[i] = `${url}/${dayTime}/${count}.jpg`;\r\n    });\r\n    \r\n    if ( hours >= 0 && hours < 6 ) {\r\n        res('night');\r\n    } else if ( hours >= 6 && hours < 12 ) {\r\n        res('morning');\r\n    } else if ( hours >= 12 && hours < 18 ) {\r\n        res('afternoon');\r\n    } else {\r\n        res('evening');\r\n    }\r\n    \r\n    // установка изображения\r\n    const setSlide = (slide) => {  \r\n        const img = new Image();\r\n        img.src = slide;\r\n        img.addEventListener('load', () => {\r\n            body.style.backgroundImage = `url(\"${slide}\")`;\r\n        });\r\n    };\r\n    \r\n    const randomSlide = slideArray[getRandom(20)]; // рандомный слайд\r\n    let currentSlide = slideArray.indexOf(randomSlide); // текущий слайд\r\n    \r\n    // рандомный слайд при загрузке\r\n    setSlide(randomSlide);\r\n\r\n    // предыдущий слайд\r\n    prevSlide.addEventListener('click', () => {\r\n        currentSlide--;\r\n\r\n        if (currentSlide < 0) {\r\n            currentSlide = slideArray.length - 1;\r\n        }\r\n\r\n        const prev = slideArray[currentSlide];\r\n\r\n        setSlide(prev);\r\n    });\r\n\r\n    // следующий слайд\r\n    nextSlide.addEventListener('click', () => {\r\n        currentSlide++;\r\n        \r\n        if (currentSlide > slideArray.length - 1) {\r\n            currentSlide = 0;\r\n        }\r\n\r\n        const next = slideArray[currentSlide];\r\n        setSlide(next);\r\n    });\r\n};\r\n\r\nexport default slider;","const time = () => {\r\n    const timeBlock = document.querySelector('.time');\r\n    const dateBlock = document.querySelector('.date');\r\n\r\n    const setDate = () => {\r\n        const date = new Date();\r\n        const dateOptions = {\r\n            weekday: 'long',\r\n            month: 'long',\r\n            day: 'numeric'\r\n        };\r\n\r\n        timeBlock.textContent = date.toLocaleTimeString();\r\n        dateBlock.textContent = date.toLocaleDateString('en-US', dateOptions);\r\n    };\r\n\r\n    setDate();\r\n\r\n    setInterval(() => {\r\n        setDate();\r\n    }, 1000);\r\n};\r\n\r\nexport default time;","// рандомайзер\r\nconst getRandom = (max) => {\r\n    return Math.floor(Math.random() * max);\r\n};\r\n\r\n// фетч данных\r\nconst getData = async (url) => {\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n\r\n    if (response.ok) {\r\n        return json;\r\n    }\r\n};\r\n\r\nexport { getRandom, getData };","const weather = () => {\r\n    const inputCity = document.querySelector('.city');\r\n    const spanTemperature = document.querySelector('.temperature');\r\n    const spanWeatherDescription = document.querySelector('.weather-description');\r\n    const divWind = document.querySelector('.wind');\r\n    const divHumidity = document.querySelector('.humidity');\r\n    const weatherIcon = document.querySelector('.weather-icon');\r\n    const weatherError = document.querySelector('.weather-error');\r\n\r\n    // устанавливаем стандартные значения\r\n    if (!localStorage.getItem('city')) {\r\n        localStorage.setItem('city', 'Minsk');\r\n    }\r\n\r\n    if (!localStorage.getItem('lang')) {\r\n        localStorage.setItem('lang', 'en');\r\n    }\r\n\r\n    if (!localStorage.getItem('units')) {\r\n        localStorage.setItem('units', 'metric');\r\n    }\r\n\r\n    let city = localStorage.getItem('city');\r\n    let lang = localStorage.getItem('city');\r\n    let units = localStorage.getItem('units');\r\n\r\n    // устанавливаем input.value при загрузке\r\n    inputCity.value = city;\r\n\r\n    // устанавливаем значение города\r\n    const setCity = () => {\r\n        city = inputCity.value;\r\n        localStorage.setItem('city', city);\r\n\r\n        if (inputCity.value < 1) {\r\n            inputCity.setAttribute('placeholder', '[Enter city]');\r\n        }\r\n\r\n        getWeather(city, lang, units);\r\n    };\r\n\r\n    // нажатие Enter в Input\r\n    inputCity.addEventListener('keypress', (e) => {\r\n        if (e.key === 'Enter') {\r\n            setCity();\r\n        }\r\n    });\r\n\r\n    // потеря фокуса Input\r\n    inputCity.addEventListener('blur', (e) => {\r\n        setCity();\r\n    });\r\n\r\n    // \r\n    const apiKey = '5a5b9e031663040bac75de74f3fca5f5';\r\n    const url = 'https://api.openweathermap.org/data/2.5/weather';\r\n\r\n    // фетчим данные\r\n    const getWeather = async (city, lang, units) => {        \r\n        const response = await fetch(`${url}?q=${city}&lang=${lang}&appid=${apiKey}&units=${units}`);\r\n        const json = await response.json();\r\n\r\n        if (response.ok) {\r\n            const icon = json.weather[0].id;\r\n            const temperature = Math.floor(json.main.temp);\r\n            const weatherDescription = json.weather[0].description;\r\n            const windSpeed = Math.floor(json.wind.speed);\r\n            const humidity = json.main.humidity;\r\n\r\n            weatherError.textContent = '';\r\n            weatherIcon.className = 'weather-icon owf';\r\n            weatherIcon.classList.add(`owf-${icon}`);\r\n            spanTemperature.textContent = `${temperature}°C`;\r\n            spanWeatherDescription.textContent = weatherDescription;\r\n            divWind.textContent = `Wind speed: ${windSpeed} m/s`;\r\n            divHumidity.textContent = `Humidity: ${humidity}%`;\r\n        } else {\r\n            weatherError.textContent = `Error! city not found for \"${inputCity.value}\"!`;\r\n            weatherIcon.className = 'weather-icon owf';\r\n            spanTemperature.textContent = '';\r\n            spanWeatherDescription.textContent = '';\r\n            divWind.textContent = '';\r\n            divHumidity.textContent = '';\r\n        }\r\n    };\r\n\r\n    getWeather(city, lang, units);\r\n};\r\n\r\nexport default weather;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import time from './modules/time';\r\nimport greeting from './modules/greeting';\r\nimport slider from './modules/slider';\r\nimport quotes from './modules/quotes';\r\nimport weather from './modules/weather';\r\nimport player from './modules/player';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    time();\r\n    greeting();\r\n    slider();\r\n    quotes();\r\n    weather();\r\n    player();\r\n});"],"names":[],"sourceRoot":""}